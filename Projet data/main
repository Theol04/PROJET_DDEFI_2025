from Pipeline.pipeline import download_data
from ML.ml import load_best_model
from ML.ml import ml 
import os 
import pickle 
import json 
import pandas as pd 

def predict_rain_in_24h(departement):
    """
    Met √† jour la base de donn√©es, r√©cup√®re la derni√®re ligne et pr√©dit la pluie dans 3h.

    Args:
        departement (str): Nom du d√©partement.

    Returns:
        float: Pourcentage de pluie pr√©vu dans 3h.
    """

    # T√©l√©charger et mettre √† jour les donn√©es
    url = "https://public.opendatasoft.com//api/explore/v2.1/catalog/datasets/donnees-synop-essentielles-omm/records"
    download_data(url,departement)
    fichier_csv = os.path.join( "BDD", f"data_{departement}.csv")
    df = pd.read_csv(fichier_csv, parse_dates=["date"],low_memory=False)
    if df.empty:
        raise ValueError(f"‚ùå Aucune donn√©e disponible pour {departement}.")

    # R√©cup√©rer la derni√®re observation
    last_row = df.iloc[-1:].copy()  # Copie pour √©viter les warnings

    # Charger le meilleur mod√®le et ses features
    model, features = load_best_model(departement)

    # V√©rifier que toutes les features sont disponibles
    missing_cols = [col for col in features if col not in last_row.columns]
    if missing_cols:
        raise ValueError(f"‚ùå Colonnes manquantes dans les donn√©es r√©centes : {missing_cols}")

    # Pr√©parer les donn√©es pour la pr√©diction
    X_latest = last_row[features]  # Garder uniquement les colonnes utilis√©es pour l'entra√Ænement

    # Faire la pr√©diction
    rain_prediction = model.predict(X_latest)[0]  # Pr√©diction sur la derni√®re ligne

    # Afficher le r√©sultat
    print(f"üåßÔ∏è Pr√©diction de pluie dans 24h heures pour {departement} : {rain_prediction:.2f} mm")

    return rain_prediction


if __name__ =='__main__': 
    
    departements = ["Dr√¥me","Somme","Landes","Puy-de-D√¥me","Marne","Vienne","Bas-Rhin"]
    for departement in departements: 
        features_to_keep = ["mois_de_l_annee","pmer","tend","ff", "ww","pres", "pmer", "raf10","rafper","etat_sol"]
        #ml(departement,features_to_keep,accuracy_tolerance= 5)
        predict_rain_in_24h(departement)
